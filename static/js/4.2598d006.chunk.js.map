{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/Message/Message.module.scss","components/Dialogs/DialogItem/Dialogitem.module.scss","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Message/MessageContainer.tsx","hoc/WithAuthRedirect.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","Dialog","props","path","id","className","s","dialog__item","dialog__itemLink","to","name","DialogItem","dialogsElements","dialogsData","map","dialogsItems","Message","dialogs__message","message","maxLength","maxLengthCreator","ReduxMessageForm","reduxForm","form","action","onSubmit","handleSubmit","Field","type","placeholder","component","TextArea","validate","required","MessagesContainer","compose","connect","state","messagesData","messagesPage","isAuth","auth","dispatch","sendMessage","addMessageActionCreator","Component","RedirectComponent","this","React","messageElements","dialogsMessages","formData","Dialogs","dialogs"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,0B,oBCA9DD,EAAOC,QAAU,CAAC,gBAAgB,kCAAkC,oBAAoB,wC,0HCclFC,EAAS,SAACC,GACZ,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,wBAAIC,UAAWC,IAAEC,cACb,kBAAC,IAAD,CAASF,UAAWC,IAAEE,iBAAkBC,GAAIN,GAAOD,EAAMQ,QAK9D,SAASC,EAAWT,GAEvB,IAAIU,EAAkBV,EAAMW,YAAYC,KAAI,SAAAJ,GAAI,OAAG,kBAAC,EAAD,CAAQA,KAAMA,EAAKA,KAAMN,GAAIM,EAAKN,QACrF,OACQ,wBAAIC,UAAWC,IAAES,cACXH,G,8CCKZI,EAAU,SAACd,GACb,OAAO,yBAAKG,UAAWC,IAAEW,kBAAmBf,EAAMgB,UA4BtD,IAAMC,EAAYC,YAAiB,IAe7BC,EAAmBC,YAA2B,CAACC,KAAM,WAAlCD,EAdwC,SAACpB,GAE9D,OACI,oCACI,0BAAMsB,OAAO,IAAIC,SAAUvB,EAAMwB,cAC7B,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAa,UAAWnB,KAAM,UAAWN,GAAI,UAAW0B,UAAWC,IAC/EC,SAAU,CAACC,IAASd,KAE3B,6C,wDC/CHe,EAAoBC,kBAC7BC,aAlBkB,SAACC,GACnB,MAAO,CACHC,aAAcD,EAAME,aAAaD,aACjCzB,YAAYwB,EAAME,aAAa1B,YAC/B2B,OAAQH,EAAMI,KAAKD,WAIF,SAACE,GACtB,MAAO,CACHC,YAAa,SAACzB,GACVwB,EAASE,YAAwB1B,UCXb,SAAC2B,GAAoC,IAC3DC,EAD0D,uKAGxD,OAAKC,KAAK7C,MAAMsC,OACT,kBAACK,EAAcE,KAAK7C,OADI,kBAAC,IAAD,CAAUO,GAAI,eAHW,GAChCuC,IAAMH,WAUtC,OAAOT,aAH0B,SAACC,GAAD,MAA2B,CACxDG,OAAQH,EAAMI,KAAKD,UAEhBJ,CAAqCU,KDMfX,EDa1B,SAAkBjC,GAErB,IAAI+C,EAAkB/C,EAAMoC,aAAaxB,KAAI,SAAAI,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASd,GAAIc,EAAQd,QAMvG,OAAIF,EAAMsC,OAGN,yBAAKnC,UAAWC,IAAE4C,iBACd,kBAACvC,EAAD,CAAYE,YAAaX,EAAMW,cAC9BoC,EAGD,kBAAC5B,EAAD,CAAkBI,SAXT,SAAC0B,GACfjD,EAAMyC,YAAYQ,EAASjC,aAEL,kBAAC,IAAD,CAAWT,GAAI,cGlC7B2C,UARd,WACG,OACI,yBAAK/C,UAAWC,IAAE+C,SACd,kBAACnB,EAAD","file":"static/js/4.2598d006.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__aG8Dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__-WMjs\",\"active\":\"Message_active__8vfNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs-items\":\"Dialogitem_dialogs-items__3DOs0\",\"dialog__item-link\":\"Dialogitem_dialog__item-link__3olNe\"};","import React from \"react\";\nimport s from \"./Dialogitem.module.scss\"\nimport {NavLink} from \"react-router-dom\";\nimport {DialogsDataType} from \"../../../redux/dialogsReducer\";\n\n\ntype DialogTypeProps = {\n    name: string\n    id: number\n}\n\ntype DialogItemType =  {\n    dialogsData: Array<DialogsDataType>\n}\n\nconst Dialog = (props: DialogTypeProps) => {\n    let path = '/dialogs/' + props.id;\n    return (\n        <li className={s.dialog__item}>\n            <NavLink className={s.dialog__itemLink} to={path}>{props.name}</NavLink>\n        </li>\n    );\n}\n\nexport function DialogItem(props: DialogItemType) {\n\n    let dialogsElements = props.dialogsData.map(name=> <Dialog name={name.name} id={name.id} />)\n    return (\n            <ul className={s.dialogsItems}>\n                { dialogsElements }\n            </ul>\n    );\n}","import React, {ChangeEvent} from \"react\";\nimport s from \"./Message.module.scss\"\n\nimport {DialogItem} from \"../DialogItem/DialogItem\";\nimport {DialogsDataType, MessagesDataType} from \"../../../redux/dialogsReducer\";\nimport { Redirect } from \"react-router-dom\";\nimport {Field, InjectedFormProps} from \"redux-form\";\nimport {reduxForm} from \"redux-form\";\nimport {TextArea} from \"../../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\n\n\ntype MessageTypeProps = {\n    message: string\n    id: number\n}\n\n\nexport type MapStateToPropsTypes = {\n    messagesData: Array<MessagesDataType>\n    dialogsData:Array<DialogsDataType>\n    isAuth: boolean\n}\n\nexport type MapDispatchToPropsTypes = {\n    sendMessage:(message:string)=> void\n}\n\nexport type OwnPropsTypes = {\n\n}\n\nexport type MessagesDataPropsType = MapStateToPropsTypes&MapDispatchToPropsTypes&OwnPropsTypes\n\nconst Message = (props: MessageTypeProps) => {\n    return <div className={s.dialogs__message}>{props.message}</div>\n}\n\nexport function Messages(props: MessagesDataPropsType) {\n\n    let messageElements = props.messagesData.map(message => <Message message={message.message} id={message.id}/>)\n\n\n    const onSubmit = (formData:MessageFormType) =>{\n       props.sendMessage(formData.message);\n    }\n    if(!props.isAuth) return <Redirect  to={\"/login\"}/>\n    return (\n\n        <div className={s.dialogsMessages}>\n            <DialogItem dialogsData={props.dialogsData}/>\n            {messageElements}\n            {/*<textarea onChange={onChangeTextMessage} value={props.newMessageText} placeholder={\"Enter your message\"}/>*/}\n            {/*<button onClick={sendMessage}>send</button>*/}\n            <ReduxMessageForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\n\ntype MessageFormType = {\n    message: string\n}\nconst maxLength = maxLengthCreator(10);\nconst MessageForm:React.FC<InjectedFormProps<MessageFormType>> = (props) => {\n\n    return(\n        <>\n            <form action=\"#\" onSubmit={props.handleSubmit}>\n                <Field type=\"text\" placeholder={\"message\"} name={\"message\"} id={\"message\"} component={TextArea}\n                       validate={[required,maxLength]}\n                />\n                <button>send</button>\n            </form>\n        </>\n    );\n}\n\nconst ReduxMessageForm = reduxForm<MessageFormType>({form: \"message\"})(MessageForm)","import React from \"react\";\nimport {MapDispatchToPropsTypes, MapStateToPropsTypes, Messages,  OwnPropsTypes} from \"./Message\";\nimport {connect} from \"react-redux\";\nimport {RootStateRedux} from \"../../../redux/redux-store\";\nimport {compose, Dispatch} from \"redux\";\nimport {withAuthRedirect} from \"../../../hoc/WithAuthRedirect\";\nimport {addMessageActionCreator} from \"../../../redux/dialogsReducer\";\n\nlet mapStateToProps = (state: RootStateRedux) => {\n    return {\n        messagesData: state.messagesPage.messagesData,\n        dialogsData:state.messagesPage.dialogsData,\n        isAuth: state.auth.isAuth\n    }\n}\n\nlet mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        sendMessage: (message:string) => {\n            dispatch(addMessageActionCreator(message));\n        }\n    }\n}\n\n\nexport const MessagesContainer = compose<React.ComponentType>(\n    connect<MapStateToPropsTypes,MapDispatchToPropsTypes,OwnPropsTypes,RootStateRedux>(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n)(Messages)","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {RootStateRedux} from \"../redux/redux-store\";\nimport {connect} from \"react-redux\";\n\ntype RedirectComponentTypeProps ={\n    isAuth:boolean\n}\nexport const withAuthRedirect = (Component: React.ComponentType) => {\n    class RedirectComponent extends React.Component<RedirectComponentTypeProps, RootStateRedux> {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\n            return <Component {...this.props}/>\n        }\n\n    }\n    let mapStateToPropsForRedirect = (state: RootStateRedux) =>({\n        isAuth: state.auth.isAuth\n    })\n    return connect(mapStateToPropsForRedirect) (RedirectComponent);\n}","import React from \"react\";\nimport s from \"./Dialogs.module.scss\"\nimport {MessagesContainer} from \"./Message/MessageContainer\";\n\n function Dialogs() {\n    return (\n        <div className={s.dialogs}>\n            <MessagesContainer />\n        </div>\n    );\n}\n\nexport default Dialogs;"],"sourceRoot":""}