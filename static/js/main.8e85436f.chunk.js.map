{"version":3,"sources":["components/Navbar/Nav.module.scss","components/Navbar/Sidebar/Sidebar.module.scss","components/Header/Links/Links.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Header/Searchbar/Searchbar.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Dialogs/DialogItem/Dialogitem.module.scss","components/Header/Logo/Logo.module.scss","components/Dialogs/Message/Message.module.scss","components/Header/Header.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Dialogs/Dialogs.module.scss","components/Music/Music.module.scss","components/Header/Searchbar/Searchbar.tsx","components/Header/Logo/Logo.tsx","components/Header/Links/Links.tsx","components/Header/Header.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Navbar/Sidebar/Sidebar.tsx","components/Navbar/Nav.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","App.tsx","redux/state.ts","index.tsx"],"names":["module","exports","Searchbar","className","s","searchBar","action","type","search","placeholder","btn","btnImg","src","alt","Logo","link","href","logo","Links","headerNav","headerNavList","headerNavLink","to","linkLogo","Header","header","Post","props","post","message","likes","MyPosts","posts","postData","map","p","id","title","tA","value","newPostText","onChange","e","textPost","currentTarget","dispatch","onClick","ProfileInfo","content","profileCover","userAvatar","tools","userName","Profile","Friend","friendName","name","split","toString","slice","key","friendsItem","friendsItemLink","friend","avatar","avatarLink","label","Friends","friendsData","friendsBlock","friendsTitle","friendList","Navbar","nav","navList","navListItem","navListLink","activeClassName","active","ico","Dialog","path","dialog__item","dialog__itemLink","DialogItem","dialogsElements","dialogsData","dialogsItems","Message","dialogs__message","newMessage","React","createRef","sendMessage","alert","current","Messages","messageElements","messagesData","dialogsMessages","ref","Dialogs","dialogs","News","Music","wrapper","App","Nav","state","sideBarFriend","render","profilePage","messagesPage","store","_state","_callSubscriber","console","log","subscribe","observer","this","getState","newPost","Date","getTime","push","rerenderEntireTree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.8e85436f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3j6-Z\",\"navList\":\"Nav_navList__6zo0V\",\"navListItem\":\"Nav_navListItem__1jA_1\",\"navListLink\":\"Nav_navListLink__3wc_9\",\"active\":\"Nav_active__2wOQp\",\"ico\":\"Nav_ico__1bHep\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsBlock\":\"Sidebar_friendsBlock__3EgsA\",\"friendsTitle\":\"Sidebar_friendsTitle__1tsA0\",\"friendList\":\"Sidebar_friendList__1dy-6\",\"friendsItem\":\"Sidebar_friendsItem__3uUy-\",\"friendsItemLink\":\"Sidebar_friendsItemLink__3Uyae\",\"avatar\":\"Sidebar_avatar__3e8Kj\",\"label\":\"Sidebar_label__1Uqn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerNav\":\"Links_headerNav__3J6Xc\",\"headerNavList\":\"Links_headerNavList__1Wd_X\",\"headerNavLink\":\"Links_headerNavLink__A0hQA\",\"linkLogo\":\"Links_linkLogo__3PnrJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__3-wTN\",\"profileCover\":\"ProfileInfo_profileCover__1Hmyo\",\"userAvatar\":\"ProfileInfo_userAvatar__3UMQ4\",\"userName\":\"ProfileInfo_userName__3XcCB\",\"tools\":\"ProfileInfo_tools__39IW9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"Searchbar_searchBar__1dbnl\",\"search\":\"Searchbar_search__uaHcz\",\"btn\":\"Searchbar_btn__2QgwC\",\"btnImg\":\"Searchbar_btnImg__2XyPQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tA\":\"MyPosts_tA__2LMNs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs-items\":\"Dialogitem_dialogs-items__3DOs0\",\"dialog__item-link\":\"Dialogitem_dialog__item-link__3olNe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Logo_link__1RBAM\",\"logo\":\"Logo_logo__2QcBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Message_dialogs__-WMjs\",\"active\":\"Message_active__8vfNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Zreg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__oofNq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__aG8Dr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Music_wrapper__3GFN9\"};","import React from \"react\";\nimport s from \"./Searchbar.module.scss\"\n\nconst Searchbar = () => {\n    return (\n            <form className={s.searchBar} action=\"get\">\n                <input type=\"search\" className={s.search} placeholder={\"Search\"}/>\n                <button className={s.btn} type={\"submit\"}>\n                    <img className={s.btnImg}\n                         src=\"https://svg-clipart.com/clipart/icon/nQy8yy4-search-icon-white-one-clipart.png\"\n                         alt=\"btn\"/>\n                </button>\n            </form>\n\n\n    );\n};\n\nexport default Searchbar;","import React from \"react\";\nimport s from \"./Logo.module.scss\";\n\nconst Logo = () => {\n    return (\n        <a className={s.link} href=\"#\">\n            <img className={s.logo}\n                 src=\"https://i.pinimg.com/originals/fa/17/c8/fa17c85d9a88e2361253a6fba7bde385.png\"\n                 alt=\"F\"/></a>\n    );\n}\n\nexport default Logo\n","import React from \"react\";\nimport s from \"./Links.module.scss\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Links = () => {\n    return(\n        <div className={s.headerNav}>\n            <ul className={s.headerNavList}>\n                <li className={s.headerNavLink} ><NavLink to={'/profile'}>\n                    <img  className= {s.linkLogo} src=\"https://scontent.fmsq2-1.fna.fbcdn.net/v/t1.30497-1/cp0/c7.0.24.24a/p24x24/84241059_189132118950875_4138507100605120512_n.jpg?_nc_cat=1&_nc_sid=dbb9e7&_nc_ohc=hScbpuUBJEwAX_yEJlI&_nc_ht=scontent.fmsq2-1.fna&oh=42cb64d61380e545f4d7f9c5165cf9e3&oe=5F1BC8A7\" alt=\"O\"/>\n                    Profile</NavLink></li>\n                <li className={s.headerNavLink}><a href=\"#\">Home</a></li>\n                <li className={s.headerNavLink}><a href=\"#\">Find Friends</a></li>\n                <li className={s.headerNavLink}><a href=\"#\">Create</a></li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Links;","import React from \"react\";\nimport s from \"./Header.module.scss\"\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport Logo from \"./Logo/Logo\";\nimport Links from \"./Links/Links\";\n\nconst Header = () => {\n    return (\n        <header className={s.header}>\n            <Logo/>\n            <Searchbar/>\n            <Links/>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\nimport s from \"./Post.module.scss\";\n\ntype PostPropsType = {\n    message: string,\n\tlikes: number\n    id: number\n}\n\nconst Post = (props:PostPropsType) => {\n  return (\n\t<div>\n\t  <div className={s.post}>\n\t\t<img\n\t\t  src=\"https://icdn.lenta.ru/images/2020/01/28/17/20200128170822958/square_1280_afbb21cfff8d776afb23c0d8d2a96a7c.jpg\"\n\t\t  alt=\"avatar\"\n\t\t/>\n\t\t{props.message}\n\t  </div>\n\t  <div className=\"like\">{props.likes} like</div>\n\t</div>\n  );\n};\n\nexport default Post;\n","import React, {ChangeEvent, useState} from \"react\";\nimport s from \"./MyPosts.module.scss\";\nimport Post from \"./Post/Post\";\nimport {ActionsTypes, AddPostType, OnChangeTextArea, PostDataType} from \"../../../redux/state\";\n\n\ntype PostDataTypePropsType = {\n    postData: Array<PostDataType>\n    newPostText: string\n    dispatch: (action:ActionsTypes) => void\n\n}\n\nconst MyPosts = (props: PostDataTypePropsType) => {\n\n    let posts = props.postData.map(p => <Post message={p.post} likes={p.likes} id={p.id}/>)\n\n\n    const addPostOnClick = () => {\n        props.dispatch({type:\"ADD-POST\"});\n    }\n\n   const onChangeTextArea = (e:ChangeEvent<HTMLTextAreaElement>) =>{\n        let textPost = e.currentTarget.value;\n        props.dispatch({type:\"ON-CHANGE-TEXTAREA\", textPost: textPost})\n   }\n    return (\n        <div className={s.posts}>\n            <h2 className={s.title}>My posts</h2>\n            <textarea className={s.tA} value={props.newPostText} onChange={onChangeTextArea}/>\n            <button onClick={addPostOnClick}>AddPost</button>\n            <button>Delete</button>\n            {posts}\n        </div>\n    );\n};\n\nexport default MyPosts;\n","import React from \"react\";\nimport s from \"./ProfileInfo.module.scss\";\n\n\nconst ProfileInfo = () => {\n    return (\n        <div className={s.content}>\n            <div className={s.profileCover}>\n                <div className={s.userAvatar}> </div>\n            </div>\n            <div className={s.tools}>\n                <div className={s.userName}>Yury Yury</div>\n            </div>\n            <div className=\"descr\">description</div>\n        </div>\n    );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport s from \"./Profile.module.scss\";\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport {ActionsTypes, AddPostType, OnChangeTextArea, PostDataType} from \"../../redux/state\";\n\n\ntype PostDataPropsType = {\n    postData: Array<PostDataType>\n    newPostText: string\n    dispatch: (action: ActionsTypes) => void\n\n\n}\n\nconst Profile = (props: PostDataPropsType) => {\n    return (\n        <div className={s.content}>\n            <ProfileInfo/>\n            <MyPosts postData={props.postData}\n                     newPostText={props.newPostText}\n                     dispatch={props.dispatch}\n            />\n        </div>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport s from \"./Sidebar.module.scss\"\nimport {FriendDataType} from \"../../../redux/state\";\n\ntype FriendsDataTypeProps = {\n   friendsData: Array<FriendDataType>\n}\ntype FriendDataTypeProps = {\n    id: number\n    avatarLink: string\n    name:string\n}\nconst Friend = (props: FriendDataTypeProps) => {\n    let friendName = props.name.split(\" \",1).toString().slice(0, 6);\n    return (\n\n        <>\n            <li key={props.id} className={s.friendsItem}>\n                <a className={s.friendsItemLink} href=\"#\">\n                    <div className={s.friend}>\n                        <img className={s.avatar}\n                             src={props.avatarLink}\n                             alt=\"ava\"/>\n                        <span className={s.label}>{friendName}</span>\n                    </div>\n                </a>\n            </li>\n        </>\n    )\n}\nexport const Friends = (props:FriendsDataTypeProps) => {\n     let Friends = props.friendsData.map(friend =>\n         <Friend id={friend.id} avatarLink={friend.avatarLink} name={friend.name}/>)\n\n    return (\n        <div className={s.friendsBlock}>\n            <h3 className={s.friendsTitle}>Friends</h3>\n            <ul className={s.friendList}>\n                {Friends}\n            </ul>\n        </div>\n    );\n}\n","import React from \"react\";\nimport s from \"./Nav.module.scss\";\nimport {NavLink} from \"react-router-dom\";\nimport {Friends} from \"./Sidebar/Sidebar\";\nimport {FriendDataType} from \"../../redux/state\";\n\ntype FriendsDataTypeProps = {\n    friendsData: Array<FriendDataType>\n}\nconst Navbar = (props:FriendsDataTypeProps) => {\n    return (\n        <nav className={s.nav}>\n            <ul className={s.navList}>\n                <li className={s.navListItem}>\n                    <NavLink className={s.navListLink} activeClassName={s.active} to=\"/profile\">\n                        <img className={s.ico} src=\"https://image.flaticon.com/icons/svg/1289/1289812.svg\" alt=\"ico\"/>\n                        Profile</NavLink>\n                </li>\n                <li className={s.navListItem}>\n                    <NavLink className={s.navListLink} activeClassName={s.active} to=\"/dialogs\">\n                        <img className={s.ico} src=\"https://image.flaticon.com/icons/svg/1289/1289812.svg\" alt=\"ico\"/>\n                        Messages</NavLink>\n                </li>\n                <li className={s.navListItem}>\n                    <NavLink className={s.navListLink} activeClassName={s.active} to=\"news\">\n                        <img className={s.ico} src=\"https://image.flaticon.com/icons/svg/1289/1289812.svg\" alt=\"ico\"/>\n                        News</NavLink>\n                </li>\n                <li className={s.navListItem}>\n                    <NavLink className={s.navListLink} activeClassName={s.active} to=\"music\">\n                        <img className={s.ico} src=\"https://image.flaticon.com/icons/svg/1289/1289812.svg\" alt=\"ico\"/>\n                        Music</NavLink>\n                </li>\n            </ul>\n            <Friends friendsData={props.friendsData}/>\n        </nav>\n\n\n\n    );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport s from \"./Dialogitem.module.scss\"\nimport {NavLink} from \"react-router-dom\";\nimport {DialogsDataType} from \"../../../redux/state\";\n\ntype DialogTypeProps = {\n    name: string\n    id: number\n}\n\ntype DialogItemType =  {\n    dialogsData: Array<DialogsDataType>\n}\n\nconst Dialog = (props: DialogTypeProps) => {\n    let path = '/dialogs/' + props.id;\n    return (\n        <li className={s.dialog__item}>\n            <NavLink className={s.dialog__itemLink} to={path}>{props.name}</NavLink>\n        </li>\n    );\n}\n\nexport function DialogItem(props: DialogItemType) {\n\n    let dialogsElements = props.dialogsData.map(name=> <Dialog name={name.name} id={name.id} />)\n    return (\n            <ul className={s.dialogsItems}>\n                { dialogsElements }\n            </ul>\n    );\n}","import React from \"react\";\nimport s from \"./Message.module.scss\"\nimport {MessagesDataType} from \"../../../redux/state\";\n\n\n\n\ntype MessageTypeProps = {\n    message: string\n    id: number\n}\n\ntype MessagesDataPropsType = {\n    messagesData: Array<MessagesDataType>\n}\n\nconst Message = (props: MessageTypeProps) => {\n    return <div className={s.dialogs__message}>{props.message}</div>\n}\n\nlet newMessage= React.createRef<HTMLTextAreaElement>();\n\nconst sendMessage = ()=>{\n\n    alert(newMessage.current?.value);\n}\n\nexport function Messages(props:MessagesDataPropsType) {\n    let messageElements = props.messagesData.map(message => <Message message={message.message} id={message.id}/>)\n       return (\n            <div className={s.dialogsMessages}>\n                { messageElements }\n                <textarea ref={newMessage}> </textarea>\n                <button onClick={sendMessage}>send</button>\n            </div>\n    );\n}","import React from \"react\";\nimport s from \"./Dialogs.module.scss\"\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Messages} from \"./Message/Message\";\nimport {DialogsDataType, MessagesDataType} from \"../../redux/state\";\n\n\n\ntype DialogsPropsType = {\n    dialogsData: Array<DialogsDataType>\n    messagesData: Array<MessagesDataType>\n}\nexport function Dialogs(props:DialogsPropsType) {\n    return (\n        <div className={s.dialogs}>\n            <DialogItem dialogsData={props.dialogsData}/>\n            <Messages messagesData={props.messagesData}/>\n\n        </div>\n    );\n}","import React from \"react\";\n\nconst News = () => {\n    return(\n        <div>\n            <h2>My News</h2>\n        </div>\n    );\n}\n\nexport default News;","import React from \"react\";\nimport s from \"./Music.module.scss\"\nconst Music = () => {\n    return(\n        <div className={s.wrapper}>\n            <h2>My Music</h2>\n        </div>\n    );\n}\n\nexport default Music","import \"react\";\nimport React from \"react\";\nimport \"./App.scss\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport Profile from \"./components/Profile/Profile\";\nimport Navbar from \"./components/Navbar/Nav\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport {ActionsTypes, AddPostType, OnChangeTextArea, RootStateType} from \"./redux/state\";\n\ntype AppPropsType = {\n    state: RootStateType\n    dispatch: (action: ActionsTypes) => void\n}\n\nconst App = (props: AppPropsType) => {\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Navbar friendsData={props.state.sideBarFriend.friendsData}/>\n                <div className={\"content\"}>\n                    <Route path={'/profile'}\n                           render={() =>\n                               <Profile\n                                   postData={props.state.profilePage.postData}\n\n                                   newPostText={props.state.profilePage.newPostText}\n\n                                   dispatch={props.dispatch}\n                               />\n                           }/>\n                    <Route path={'/dialogs'}\n                           render={() =>\n                               <Dialogs dialogsData={props.state.messagesPage.dialogsData}\n                                        messagesData={props.state.messagesPage.messagesData}\n                               />\n\n                           }/>\n                    <Route path={'/news'} render={() => <News/>}/>\n                    <Route path={'/music'} render={() => <Music/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n\n","export type PostDataType = {\n    id: number\n    post: string\n    likes: number\n}\n\nexport type DialogsDataType = {\n    id: number,\n    name: string\n}\n\nexport type MessagesDataType = {\n    id: number,\n    message: string\n}\n\nexport type FriendDataType = {\n    id: number\n    avatarLink: string\n    name: string\n}\n\nexport type ProfilePageType = {\n    postData: Array<PostDataType>\n    newPostText: string\n}\n\nexport type MessagesPage = {\n    dialogsData: Array<DialogsDataType>\n    messagesData: Array<MessagesDataType>\n}\n\nexport type FriendsDataType = {\n    friendsData: Array<FriendDataType>\n}\n\nexport type RootStateType = {\n    profilePage: ProfilePageType\n    messagesPage: MessagesPage\n    sideBarFriend: FriendsDataType\n}\n\nexport type StoreType = {\n    _state: RootStateType\n    _callSubscriber: (state: RootStateType) => void\n\n    subscribe: (observer: (state: RootStateType) => void) => void\n    getState: () => RootStateType\n\n    dispatch: (action: ActionsTypes) => void\n}\n\ntype AddPostActionType = {\n    type: \"ADD-POST\"\n}\n\ntype OnChangeTextAreaActionType = {\n    type: \"ON-CHANGE-TEXTAREA\"\n    textPost: string\n}\nexport type ActionsTypes = AddPostActionType | OnChangeTextAreaActionType\n\n\nexport type AddPostType = () => void;\n\nexport type OnChangeTextArea = (textPost: string) => void\n\n\nconst store: StoreType = {\n    _state: {\n        profilePage: {\n            postData: [\n                {id: 1, post: \"It's first post\", likes: 10},\n                {id: 2, post: \"It's second post\", likes: 110},\n                {id: 3, post: \"It's third post\", likes: 22},\n                {id: 4, post: \"It's fourth post\", likes: 1},\n            ],\n            newPostText: \"\"\n        },\n        messagesPage: {\n            dialogsData: [\n                {id: 1, name: \"Dimych\"},\n                {id: 2, name: \"Andrew\"},\n                {id: 3, name: \"Alexandr\"},\n                {id: 4, name: \"Pavel\"},\n                {id: 5, name: \"Yura\"},\n                {id: 6, name: \"Valera\"}\n            ],\n            messagesData: [\n                {id: 1, message: \"Hi\"},\n                {id: 2, message: \"How are you\"},\n                {id: 3, message: \"Norm_\"},\n                {id: 4, message: \"Dnavol\"},\n                {id: 5, message: \"zuMMEr\"},\n                {id: 6, message: \"Dasdas\"}\n            ],\n\n        },\n\n        sideBarFriend: {\n            friendsData: [\n                {\n                    id: 1,\n                    avatarLink: \"https://sun9-44.userapi.com/impf/Og0nBt7TJGbkuKkZKSaqt4wGoKimHb0QgNyy6Q/9qoUsJzdhEY.jpg?size=200x0&quality=90&sign=7e863cd91046de72f55c911f94995105&ava=1\",\n                    name: \"Alena Svirida\"\n                },\n                {\n                    id: 2,\n                    avatarLink: \"https://vignette.wikia.nocookie.net/avatar/images/f/f4/3%D1%8521_%D0%90%D0%B0%D0%BD%D0%B3.jpg/revision/latest?cb=20110327121409&path-prefix=ru\",\n                    name: \"Seregaaaaaa Serg\"\n                }\n                ,\n                {\n                    id: 3,\n                    avatarLink:\n                        \"https://png.pngtree.com/png-clipart/20190906/original/pngtree-520-couple-avatar-boy-avatar-little-dinosaur-cartoon-cute-png-image_4561296.jpg\",\n                    name: \"Dinossssssssssss Zag\"\n                }\n            ]\n        }\n    },\n    _callSubscriber() {\n        console.log(\"hi\")\n    },\n\n    subscribe(observer) {\n        this._callSubscriber = observer;\n    },\n    getState() {\n        return this._state;\n    },\n\n    dispatch(action: ActionsTypes) {\n        if (action.type === \"ADD-POST\") {\n            const newPost: PostDataType = {\n                id: new Date().getTime(),\n                post: this._state.profilePage.newPostText,\n                likes: 0\n            };\n            this._state.profilePage.postData.push(newPost);\n            this._state.profilePage.newPostText = \"\";\n            this._callSubscriber(this._state);\n        } else if (action.type === \"ON-CHANGE-TEXTAREA\") {\n            this._state.profilePage.newPostText = action.textPost;\n            this._callSubscriber(this._state);\n        }\n    }\n\n}\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store, {RootStateType, StoreType} from './redux/state'\n\n\nlet rerenderEntireTree = (state:RootStateType) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App state={store.getState()}\n                 dispatch={store.dispatch.bind(store)}\n            />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\nrerenderEntireTree(store.getState());\n\nstore.subscribe(rerenderEntireTree);\n\n"],"sourceRoot":""}